MinesweeperFX Notes & Pseudocode

Basic functionality outline:
- Starting menu to choose difficulty and initiate game
- Game scene with grid of labels / buttons
- Popup window or in-game notification for win/loss/new game

Class structure
- Overarching application class to manage window(s), change scenes, i/o, flow of game
- Game board to contain all board information & process changes
	- Can be instanced class to allow entire board to be discarded at once
	- Extending GridPane could allow direct management of game cells as their own
	  extended objects
- Game cell to hold information & actions for cells i.e. process clicks, change label
	- Extending a label or button would work well to allow management directly by game
	  grid

How to structure cells into board?
- cell[][] - Causes problems trying to add all cells due to nested array structure,
but simple to track x,y pos of cell on the board
- List<cell> - Less intuitive x,y pos, but can be determined by modulo & division
  operations using row size easily. More straightforward to iterate over & add Collection
to a layout using addAll()

Core representations of board state
- Every cell has a yes/no value whether a mine is present
- Every cell is either shown or hidden - Empty cells (no neighbors or mine) must be
  distinguishable from hidden cells
- Every cell needs to manage its JavaFX object representation in board GUI, which can be
  arranged by the game board
- Game needs to easily reference # of neighboring mines & occasionally update neighboring
  cells - could be useful to store neighboring mines in the cell, but not strictly
necessary since that information is only useful when updating the label of a non-mine
cell

Development course:
- Window layout with all labels present
    - Auto-resize elements related to window
- Generate board and display mines on grid
- Click detection output to console based on mine state
- Update all initial labels with numbers
- Click-to-reveal nodes
- Reveal all empty space
